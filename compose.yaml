name: backend

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
      # - type: volume
      #   source: grafana-storage
      #   target: /var/lib/grafana

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    environment:
      - WATCHFILES_FORCE_POLLING=true
    restart: on-failure
    ports:
      - "80:80"
    develop:
      watch:
        - action: sync
          path: ./app/
          target: /fastapi/app/
          ignore:
            - .venv/
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80", "--reload"]
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports: # expose the service to the host and other containers
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/metrics.rules.yml:/etc/prometheus/metrics.rules.yml:ro
      - prometheus_data:/prometheus
    # volumes:
    #   - type: bind
    #     source: ./monitoring/prometheus/prometheus.yml
    #     target: /etc/prometheus/prometheus.yml
    #     read_only: true
    #   - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    # expose: # expose a port only to other services but not to the host machine
    #   - 9090

  loki:
    image: grafana/loki
    # image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  # promtail:
  #   image: grafana/promtail
    # image: grafana/promtail:2.9.2
    # container_name: promtail
    # volumes:
      # - ./monitoring/loki/log:/var/log
      # - ./monitoring/loki/promtail-config.yaml:/etc/promtail/config.yaml
    # command:
      # - config.file=/etc/promtail/config.yaml
      # - '-config.file=/mnt/config/promtail-config.yaml'
    # links:
    #   - loki

volumes:
  prometheus_data:
  grafana-storage: {}
  loki_data: {}
